button_card_templates:
  cardg_bg_color:
    styles:
      card:
        - background-color: |
            [[[
              return (hass.themes.darkMode)? '#333333' : '#EEEEEE';
            ]]]

  icon_color:
    styles:
      icon:
        - color: rgb(68, 115, 158)

  icon_radiator:
    icon: |
      [[[ 
        return (entity.state === 'on')? 'mdi:radiator' : 'mdi:radiator-disabled';
      ]]]
  time_increment_tpl:
    variables:
      entity: ''
    icon: mdi:plus
    tap_action:
      action: call-service
      service: input_number.increment
      service_data:
        entity_id:
          - '[[[ return variables.entity ]]]'
  time_decrement_tpl:
    variables:
      entity: ''
    icon: mdi:minus
    tap_action:
      action: call-service
      service: input_number.decrement
      service_data:
        entity_id:
          - '[[[ return variables.entity ]]]'
  time_view_tpl:
    variables:
      unit: ''
    show_icon: false
    name: |
      [[[ 
        return String(parseInt(entity.state)).padStart(2, '0') + ' ' + variables.unit;
      ]]]
  
  stop_timer_tpl:
    variables:
      switch: ''
      min: ''
      hour: ''
      entity: ''
    aspect_ratio: 3/1
    layout: icon_name
    icon: |
      [[[ 
        if (states[variables.switch].state === 'off') return 'mdi:timer-off-outline';
        return (entity.state === 'active')? 'mdi:timer-pause-outline' : 'mdi:timer-play-outline';
      ]]]
    name: |
      [[[ 
        if (entity.state === 'idle') {
          var minutes = String(parseInt(states[variables.min].state)).padStart(2, '0'),
            hours = String(parseInt(states[variables.hour].state)).padStart(2, '0');

          return hours + ':' + minutes;
        }
        if (entity.state === 'paused') {
          var leftTime = entity.attributes.remaining.split(':');
          return leftTime[0].padStart(2, '0') + ':' + leftTime[1];
        }
        var leftSeconds = Math.floor(((new Date(entity.attributes.finishes_at)).getTime() - (new Date()).getTime()) / 1000),
          leftHours = Math.ceil(leftSeconds / 3600),
          leftMinutes = Math.ceil(leftSeconds / 60) - Math.floor(leftSeconds / 3600) * 60;
        if (leftMinutes == 60) leftMinutes = 0;
        
        return String(leftHours).padStart(2, '0') + ':' + String(leftMinutes).padStart(2, '0');
      ]]]
    tap_action:
      action: |
        [[[ 
          return (states[variables.switch].state === 'off')? 'none' : 'call-service';
        ]]]
      service: |
        [[[
          return (entity.state === 'idle' || entity.state === 'paused')? 'timer.start' : 'timer.pause';
        ]]]
      service_data: |
        [[[
          if (entity.state === 'idle') {
            var minutes = parseInt(states[variables.min].state),
              hours = parseInt(states[variables.hour].state),
              duration = minutes*60 + hours*3600;
            return {
              entity_id: variables.entity,
              duration: duration
            };
          }
          return {
            entity_id: variables.entity
          };
        ]]]
    double_tap_action:
      action: call-service
      service: timer.cancel
      service_data:
        entity_id:
          - '[[[ return variables.entity ]]]'

wallpanel:
  enabled: true
  profile: night
  profile_entity: input_text.wallpanel_profile
  profiles:
    day:
      black_screen_after_time: 0
    night:
      black_screen_after_time: 15
  idle_time: 60
  image_url: ''
  info_update_interval: 30
  info_move_pattern: corners
  info_move_interval: 60
  style:
    wallpanel-screensaver-info-box:
      '--wp-card-width': 450px
      background-color: '#00000099'
      box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12)
    wallpanel-screensaver-info-box-content:
      '--ha-card-background': none
      '--ha-card-box-shadow': none
      '--ha-card-border-width': 0px
      '--primary-background-color': '#111111'
      '--secondary-background-color': '#202020'
      '--primary-text-color': '#e1e1e1'
      '--secondary-text-color': '#9b9b9b'
  cards:
    - type: vertical-stack
      cards:
        - type: horizontal-stack
          cards:
            - type: custom:button-card
              aspect_ratio: 2/1
              show_name: false
              show_label: true
              show_icon: false
              entity: sensor.cpu_temp
              styles:
                card:
                  - background-color: 'none'
              label: > 
                [[[
                  var label = '<span style="color: rgb(255, 255, 255);"><div style="font-size: 75px">';
                  label += (new Date()).toLocaleTimeString('uk', {hour: "2-digit", minute:"2-digit", hour12: false});
                  label += '</div><div style="font-size: 35px">';
                  label += (new Date()).toLocaleDateString('uk', {weekday: "short", year: "numeric", month: "short", day: "numeric"});
                  label += '</div><div style="font-size: 35px; display: flex; flex-direction: row">';
                  label += `<div style="flex:1">${states['sensor.air_outdoor_temp'].state} °C</div>`;
                  label += `<div style="flex:1">${states['sensor.air_outdoor_humidity'].state}%</div>`;
                  label += '</div></span>';
                  return label;
                ]]]
        - type: weather-forecast
          entity: weather.obolon_home
          show_forecast: true
          forecast_type: daily
          name: Дім
        - type: horizontal-stack
          cards:
            - type: custom:button-card
              aspect_ratio: 4/1
              show_name: false
              show_label: true
              show_icon: false
              styles:
                card:
                  - background-color: 'none'
                  - font-size: '30px'
              entity: sensor.cpu_temp
              label: > 
                [[[
                  var label = '';
                  label += `<table>`;
                  label += `<tr>`;
                  label += `  <th>`;
                  label += `    <svg style="width:64px;height:64px" viewBox="0 0 24 24">`;
                  label += `      <path style="${ (states['binary_sensor.m_kiyiv_air'].state == 'off')? 'fill: #AAAAAA; fill-opacity: 0.4' : 'fill: #FF0000; fill-opacity: 1' }" `;
                  label += `        d="M19.35,10.03C18.67,6.59 15.64,4 12,4C9.11,4 6.6,5.64 5.35,8.03C2.34,8.36 0,10.9 0,14A6,6 0 0,0 6,20H19A5,5 0 0,0 24,15C24,12.36 21.95,10.22 19.35,10.03Z" `;
                  label += `      />`;
                  label += `    </svg>`;
                  label += `  </th>`;
                  label += `  <th>`;
                  label += `    <svg style="width:64px;height:64px" viewBox="0 0 24 24">`;
                  label += `      <path style="${ (states['binary_sensor.m_kiyiv_artillery'].state == 'off')? 'fill: #AAAAAA; fill-opacity: 0.4' : 'fill: #FF0000; fill-opacity: 1' }" `;
                  label += `        d="M20,12H4V11H6L7,6H12L13,11H20V12M13.22,7L13.62,9H22V7H13.22M22,16A3,3 0 0,1 19,19H5A3,3 0 0,1 2,16A3,3 0 0,1 5,13H19A3,3 0 0,1 22,16M6,16A1,1 0 0,0 5,15A1,1 0 0,0 4,16A1,1 0 0,0 5,17A1,1 0 0,0 6,16M13,16A1,1 0 0,0 12,15A1,1 0 0,0 11,16A1,1 0 0,0 12,17A1,1 0 0,0 13,16M20,16A1,1 0 0,0 19,15A1,1 0 0,0 18,16A1,1 0 0,0 19,17A1,1 0 0,0 20,16Z"`;
                  label += `      />`;
                  label += `    </svg>`;
                  label += `  </th>`;
                  label += `  <th>`;
                  label += `    <svg style="width:64px;height:64px" viewBox="0 0 24 24">`;
                  label += `      <path style="${ (states['binary_sensor.m_kiyiv_chemical'].state == 'off')? 'fill: #AAAAAA; fill-opacity: 0.4' : 'fill: #FF0000; fill-opacity: 1' }" `;
                  label += `        d="M11,7.83C9.83,7.42 9,6.3 9,5A3,3 0 0,1 12,2A3,3 0 0,1 15,5C15,6.31 14.16,7.42 13,7.83V10.64C12.68,10.55 12.35,10.5 12,10.5C11.65,10.5 11.32,10.55 11,10.64V7.83M18.3,21.1C17.16,20.45 16.62,19.18 16.84,17.96L14.4,16.55C14.88,16.09 15.24,15.5 15.4,14.82L17.84,16.23C18.78,15.42 20.16,15.26 21.29,15.91C22.73,16.74 23.22,18.57 22.39,20C21.56,21.44 19.73,21.93 18.3,21.1M2.7,15.9C3.83,15.25 5.21,15.42 6.15,16.22L8.6,14.81C8.76,15.5 9.11,16.08 9.6,16.54L7.15,17.95C7.38,19.17 6.83,20.45 5.7,21.1C4.26,21.93 2.43,21.44 1.6,20C0.77,18.57 1.26,16.73 2.7,15.9M14,14A2,2 0 0,1 12,16C10.89,16 10,15.1 10,14A2,2 0 0,1 12,12C13.11,12 14,12.9 14,14M17,14L16.97,14.57L15.5,13.71C15.4,12.64 14.83,11.71 14,11.12V9.41C15.77,10.19 17,11.95 17,14M14.97,18.03C14.14,18.64 13.11,19 12,19C10.89,19 9.86,18.64 9.03,18L10.5,17.17C10.96,17.38 11.47,17.5 12,17.5C12.53,17.5 13.03,17.38 13.5,17.17L14.97,18.03M7.03,14.56L7,14C7,11.95 8.23,10.19 10,9.42V11.13C9.17,11.71 8.6,12.64 8.5,13.7L7.03,14.56Z"`;
                  label += `      />`;
                  label += `    </svg>`;
                  label += `  </th>`;
                  label += `  <th>`;
                  label += `    <svg style="width:64px;height:64px" viewBox="0 0 24 24">`;
                  label += `      <path style="${ (states['binary_sensor.m_kiyiv_nuclear'].state == 'off')? 'fill: #AAAAAA; fill-opacity: 0.4' : 'fill: #FF0000; fill-opacity: 1' }" `;
                  label += `        d="M14.04,12H10V11H5.5A3.5,3.5 0 0,1 2,7.5A3.5,3.5 0 0,1 5.5,4C6.53,4 7.45,4.44 8.09,5.15C8.5,3.35 10.08,2 12,2C13.92,2 15.5,3.35 15.91,5.15C16.55,4.44 17.47,4 18.5,4A3.5,3.5 0 0,1 22,7.5A3.5,3.5 0 0,1 18.5,11H14.04V12M10,16.9V15.76H5V13.76H19V15.76H14.04V16.92L20,19.08C20.58,19.29 21,19.84 21,20.5A1.5,1.5 0 0,1 19.5,22H4.5A1.5,1.5 0 0,1 3,20.5C3,19.84 3.42,19.29 4,19.08L10,16.9Z" `;
                  label += `      />`;
                  label += `    </svg>`;
                  label += `  </th>`;
                  label += `  <th>`;
                  label += `    <svg style="width:64px;height:64px" viewBox="0 0 24 24">`;
                  label += `      <path style="${ (states['binary_sensor.m_kiyiv_unknown'].state == 'off')? 'fill: #AAAAAA; fill-opacity: 0.4' : 'fill: #FF0000; fill-opacity: 1' }" `;
                  label += `        d="M15.94 10.28C15.66 7.87 14 6 12 6S8.34 7.87 8.06 10.28C4.5 10.82 2 12.06 2 13.5C2 15.43 6.5 17 12 17S22 15.43 22 13.5C22 12.06 19.5 10.82 15.94 10.28Z" `;
                  label += `      />`;
                  label += `    </svg>`;
                  label += `  </th>`;
                  label += `  <th>`;
                  label += `    <svg style="width:64px;height:64px" viewBox="0 0 24 24">`;
                  label += `      <path style="${ (states['binary_sensor.m_kiyiv_urban_fights'].state == 'off')? 'fill: #AAAAAA; fill-opacity: 0.4' : 'fill: #FF0000; fill-opacity: 1' }" `;
                  label += `        d="M7,5H23V9H22V10H16A1,1 0 0,0 15,11V12A2,2 0 0,1 13,14H9.62C9.24,14 8.89,14.22 8.72,14.56L6.27,19.45C6.1,19.79 5.76,20 5.38,20H2C2,20 -1,20 3,14C3,14 6,10 2,10V5H3L3.5,4H6.5L7,5M14,12V11A1,1 0 0,0 13,10H12C12,10 11,11 12,12A2,2 0 0,1 10,10A1,1 0 0,0 9,11V12A1,1 0 0,0 10,13H13A1,1 0 0,0 14,12Z" `;
                  label += `      />`;
                  label += `    </svg>`;
                  label += `  </th>`;
                  label += `</tr>`;
                  label += `</table>`;
                  return label;
                ]]]
kiosk_mode:
  user_settings:
    - users:
        - Wallscreen
      hide_sidebar: true
views:
  - theme: Backend-selected
    icon: mdi:floor-plan
    badges: []
    panel: true
    cards:
      - type: vertical-stack
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:floorplan-card
                full_height: true
                config:
                  image: /local/floorplan/wallscreen.svg
                  stylesheet: /local/floorplan/wallscreen.css
                  defaults:
                    hover_action: none
                    tap_action: none
                    double_tap_action: none
                    hold_action: none
                  functions: |
                    >
                      return {
                        simpleLightStyles: (switchEntity) => {
                          if (entities[switchEntity].state === 'off') return 'fill: #000000; fill-opacity: 0.5';
                          return `fill: #FFFFFF; fill-opacity: 0.5`;
                        },
                        lightStyles: (switchEntity, lightEntity) => {
                          if (entities[switchEntity].state === 'off') return 'fill: #000000; fill-opacity: 0.5';
                          var rgbColor = entities[lightEntity].attributes.rgb_color;
                          var color = (typeof rgbColor === "undefined")? '#000000' : "rgb(" + rgbColor[0] + ", " + rgbColor[1] + ", " + rgbColor[2] + ")";
                          var bri = states[lightEntity].attributes.brightness / 255 * 0.5;
                          var opacity = bri.toString();

                          return `fill: ${color}; fill-opacity: ${opacity}`;
                        },
                        airTextWithCO2: (tempEntity, humEntity, co2Entity) => {
                          if (entities[tempEntity].state === undefined) return 'Offline';

                          return `${entities[tempEntity].state}° ${entities[humEntity].state}% ${parseInt(entities[co2Entity].state)} CO₂`;
                        },
                        airText: (tempEntity, humEntity) => {
                          if (entities[tempEntity].state === undefined) return 'Offline';

                          return `${entities[tempEntity].state}° ${entities[humEntity].state}%`;
                        },
                        anyBinarySensors: (prefix, sensors) => {
                          for (var i = 0; i < sensors.length; i++) {
                            if (entities[prefix + sensors[i]].state === 'on') return true;
                          }
                          return false;
                        },
                      };
                  rules:
                    - name: Fans
                      entities:
                        - entity: light.fan_bathroom
                          element: switch.fan_bathroom
                        - entity: light.fan_wc
                          element: switch.fan_wc
                      tap_action: toggle
                      state_action:
                        service: floorplan.class_set
                        service_data:
                          class: |
                            >
                              return (entity.state === 'on')? 'spinning' : '';
                    - name: Bathroom light
                      entity: light.bathroom_light_main
                      element: light.bathroom_main
                      tap_action: toggle
                      double_tap_action:
                        - action: call-service
                          service: browser_mod.popup
                          service_data:
                            title: Ванна
                            content:
                              type: vertical-stack
                              cards:
                                - type: entities
                                  entities:
                                    - entity: light.bathroom_light_main
                                    - entity: light.bathroom_light_secondary
                                    - entity: light.fan_bathroom
                                - type: conditional
                                  conditions:
                                    - entity: light.bathroom_light_main
                                      state: 'on'
                                  card:
                                    type: custom:more-info-card
                                    entity: light.bathroom
                                    title: ' '
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                        - action: call-service
                          service: floorplan.style_set
                          service_data:
                            element: light.bathroom_main
                            style: |
                              >
                                return functions.lightStyles('light.bathroom_light_main', 'light.bathroom');
                    - name: Bathroom light bulb
                      entity: light.bathroom
                      state_action:
                        - action: call-service
                          service: floorplan.style_set
                          service_data:
                            element: light.bathroom_main
                            style: |
                              >
                                return functions.lightStyles('light.bathroom_light_main', 'light.bathroom');
                    - name: Bathroom light mirror
                      entity: light.bathroom_light_secondary
                      element: light.bathroom_secondary
                      tap_action: toggle
                      state_action:
                        service: floorplan.class_set
                        service_data:
                          class: |
                            >
                              return (entity.state === 'on')? 'light-on' : '';
                    - name: WC light
                      entity: light.wc_light
                      element: light.wc
                      double_tap_action:
                        - action: call-service
                          service: browser_mod.popup
                          service_data:
                            title: Туалет
                            content:
                              type: vertical-stack
                              cards:
                                - type: entities
                                  entities:
                                    - entity: light.wc_light
                                    - entity: light.fan_wc
                                - type: conditional
                                  conditions:
                                    - entity: light.wc_light
                                      state: 'on'
                                  card:
                                    type: custom:more-info-card
                                    entity: light.wc
                                    title: ' '
                      tap_action: toggle
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                        - action: call-service
                          service: floorplan.style_set
                          service_data:
                            element: light.wc
                            style: |
                              >
                                return functions.lightStyles('light.wc_light', 'light.wc');
                    - name: WC light bulb
                      entity: light.wc
                      state_action:
                        - action: call-service
                          service: floorplan.style_set
                          service_data:
                            element: light.wc
                            style: |
                              >
                                return functions.lightStyles('light.wc_light', 'light.wc');
                    - name: Hallway light
                      entity: light.hallway_light
                      element: light.hallway
                      double_tap_action:
                        - action: call-service
                          service: browser_mod.popup
                          service_data:
                            title: Коридор
                            content:
                              type: vertical-stack
                              cards:
                                - type: entities
                                  entities:
                                    - entity: light.hallway_light
                      tap_action: toggle
                      state_action:
                        - action: call-service
                          service: floorplan.style_set
                          service_data:
                            element: light.hallway
                            style: |
                              >
                                return functions.simpleLightStyles('light.hallway_light');
                    - name: Kitchen light
                      entity: light.kitchen_light
                      element: light.kitchen
                      double_tap_action:
                        - action: call-service
                          service: browser_mod.popup
                          service_data:
                            title: Коридор
                            content:
                              type: vertical-stack
                              cards:
                                - type: entities
                                  entities:
                                    - entity: light.kitchen_light
                                - type: conditional
                                  conditions:
                                    - entity: light.kitchen_light
                                      state: 'on'
                                  card:
                                    type: custom:more-info-card
                                    entity: light.kitchen
                                    title: ' '
                      tap_action: toggle
                      state_action:
                        - action: call-service
                          service: floorplan.style_set
                          service_data:
                            element: light.kitchen
                            style: |
                              >
                                return functions.lightStyles('light.kitchen_light', 'light.kitchen');
                    - name: Kitchen light bulb
                      entity: light.kitchen
                      state_action:
                        - action: call-service
                          service: floorplan.style_set
                          service_data:
                            element: light.kitchen
                            style: |
                              >
                                return functions.lightStyles('light.kitchen_light', 'light.kitchen');
                    - name: Bedroom light
                      entity: switch.childroom_controller_main_light
                      element: light.bedroom
                      tap_action: toggle
                      state_action:
                        - action: call-service
                          service: floorplan.style_set
                          service_data:
                            element: light.bedroom
                            style: |
                              >
                                return functions.simpleLightStyles('switch.childroom_controller_main_light');
                    - name: Living room light
                      entity: light.switch_living_room
                      element: light.living_room
                      tap_action: toggle
                      double_tap_action:
                        - action: call-service
                          service: browser_mod.popup
                          service_data:
                            title: Вітальня
                            content:
                              type: vertical-stack
                              cards:
                                - type: entities
                                  entities:
                                    - entity: light.switch_living_room
                                - type: conditional
                                  conditions:
                                    - entity: light.switch_living_room
                                      state: 'on'
                                  card:
                                    type: custom:more-info-card
                                    entity: light.living_room
                                    title: ' '
                      state_action:
                        - action: call-service
                          service: floorplan.style_set
                          service_data:
                            element: light.living_room
                            style: |
                              >
                                return functions.lightStyles('light.switch_living_room', 'light.living_room');
                    - name: Living room light bulb
                      entity: light.living_room
                      tap_action: more-info
                      state_action:
                        - action: call-service
                          service: floorplan.style_set
                          service_data:
                            element: light.living_room
                            style: |
                              >
                                return functions.lightStyles('light.switch_living_room', 'light.living_room');
                    - name: Bedroom air
                      entities:
                        - entity: sensor.air_bedroom_temp
                        - entity: sensor.air_bedroom_humidity
                        - entity: sensor.air_bedroom_co2
                      state_action:
                        - action: call-service
                          service: floorplan.text_set
                          service_data:
                            element: air.bedroom
                            text: |
                              >
                                return functions.airTextWithCO2('sensor.air_bedroom_temp', 'sensor.air_bedroom_humidity', 'sensor.air_bedroom_co2');
                    - name: Balcony air
                      entities:
                        - entity: sensor.air_balcony_temp
                        - entity: sensor.air_balcony_humidity
                        - entity: sensor.air_balcony_co2
                      state_action:
                        - action: call-service
                          service: floorplan.text_set
                          service_data:
                            element: air.balcony
                            text: |
                              >
                                return functions.airTextWithCO2('sensor.air_balcony_temp', 'sensor.air_balcony_humidity', 'sensor.air_balcony_co2');
                    - name: Outdoor air
                      entities:
                        - entity: sensor.air_outdoor_temp
                        - entity: sensor.air_outdoor_humidity
                      state_action:
                        - action: call-service
                          service: floorplan.text_set
                          service_data:
                            element: air.outdoor
                            text: |
                              >
                                return functions.airText('sensor.air_outdoor_temp', 'sensor.air_outdoor_humidity');
                    - name: Living room air
                      entities:
                        - entity: sensor.air_living_room_temp
                        - entity: sensor.air_living_room_humidity
                        - entity: sensor.air_living_room_co2
                      state_action:
                        - action: call-service
                          service: floorplan.text_set
                          service_data:
                            element: air.living_room
                            text: |
                              >
                                return functions.airTextWithCO2('sensor.air_living_room_temp', 'sensor.air_living_room_humidity', 'sensor.air_living_room_co2');
                    - name: Robot vacuum
                      element: button.robot_vacuum
                      tap_action:
                        action: call-service
                        service: vacuum.start
                        service_data:
                          entity_id: vacuum.roborock_q_revo
                    - name: Living room climate btn
                      entity: input_boolean.climate_living_room
                      element: button.climate_living_room
                      tap_action: toggle
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: icon.climate_living_room
                            class: |
                              >
                                return (entity.state === 'on')? 'btn-power-on' : '';
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: button.climate_val_living_room
                            class: |
                              >
                                return (entity.state === 'on')? '' : 'hidden';
                    - name: Living room climate value btn
                      entity: input_number.climate_living_room_temp
                      element: button.climate_val_living_room
                      state_action:
                        - action: call-service
                          service: floorplan.text_set
                          service_data:
                            element: value.climate_living_room
                            text: |
                              >
                                return `${parseInt(entity.state)}°`;
                    - name: Bedroom climate btn
                      entity: input_boolean.climate_bedroom
                      element: button.climate_bedroom
                      tap_action: toggle
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: icon.climate_bedroom
                            class: |
                              >
                                return (entity.state === 'on')? 'btn-power-on' : '';
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: button.climate_val_bedroom
                            class: |
                              >
                                return (entity.state === 'on')? '' : 'hidden';
                    - name: Bedroom climate value btn
                      entity: input_number.climate_bedroom_temp
                      element: button.climate_val_bedroom
                      state_action:
                        - action: call-service
                          service: floorplan.text_set
                          service_data:
                            element: value.climate_bedroom
                            text: |
                              >
                                return `${parseInt(entity.state)}°`;
                    - name: Alerts
                      entities:
                        - entity: binary_sensor.m_kiyiv_air
                        - entity: binary_sensor.m_kiyiv_artillery
                        - entity: binary_sensor.m_kiyiv_chemical
                        - entity: binary_sensor.m_kiyiv_nuclear
                        - entity: binary_sensor.m_kiyiv_unknown
                        - entity: binary_sensor.m_kiyiv_urban_fights
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: group.alerts
                            class: |
                              >
                                return (functions.anyBinarySensors('binary_sensor.m_kiyiv_', ['air', 'artillery', 'chemical', 'nuclear', 'unknown', 'urban_fights']))? '' : 'hidden';
                    - name: Air alert
                      entity: binary_sensor.m_kiyiv_air
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: alert.air
                            class: |
                              >
                                return (entity.state === 'on')? '' : 'hidden';
                    - name: Artillery alert
                      entity: binary_sensor.m_kiyiv_artillery
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: alert.artilerry
                            class: |
                              >
                                return (entity.state === 'on')? '' : 'hidden';
                    - name: Chemical alert
                      entity: binary_sensor.m_kiyiv_chemical
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: alert.chemical
                            class: |
                              >
                                return (entity.state === 'on')? '' : 'hidden';
                    - name: Nuclear alert
                      entity: binary_sensor.m_kiyiv_nuclear
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: alert.nuke
                            class: |
                              >
                                return (entity.state === 'on')? '' : 'hidden';
                    - name: Unknown alert
                      entity: binary_sensor.m_kiyiv_unknown
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: alert.unknown
                            class: |
                              >
                                return (entity.state === 'on')? '' : 'hidden';
                    - name: City alert
                      entity: binary_sensor.m_kiyiv_urban_fights
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: alert.city
                            class: |
                              >
                                return (entity.state === 'on')? '' : 'hidden';
                    - name: Main battery button
                      element: button.battery_charge
                      entity: input_boolean.grid_power
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: button.battery_charge
                            class: hidden
                    - name: Main battery
                      element: label.baterry_volts
                      entity: input_boolean.grid_power
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: label.baterry_volts
                            class: hidden
                    - name: Motophone battery level
                      entity: sensor.motophone_battery_level
                      state_action:
                        - action: call-service
                          service: floorplan.text_set
                          service_data:
                            element: value.motophone_charge
                            text: |
                              >
                                return entities['sensor.motophone_battery_level'].state + '%';
                    - name: Motophone battery charge
                      entity: switch.living_room_phone_charger
                      element: button.motophone
                      tap_action:
                        - action: call-service
                          service: switch.toggle
                          service_data:
                            entity_id: switch.living_room_phone_charger
                      double_tap_action:
                        - action: call-service
                          service: switch.turn_off
                          service_data:
                            entity_id: switch.living_room_phone_charger
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: icon.motophone_charging
                            class: |
                              >
                                return (entity.state === 'on')? '' : 'hidden';
                    - name: Motophone location
                      entity: device_tracker.sm_g892a
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: button.motophone
                            class: |
                              >
                                return (entity.state === 'home')? '' : 'hidden';
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: label.motophone_charge
                            class: |
                              >
                                return (entity.state === 'home')? '' : 'hidden';
                    - name: Heater bathroom
                      entity: input_boolean.bathroom_heater
                      element: button.heater_bathroom
                      tap_action:
                        - action: toggle
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: icon.heater_bathroom
                            class: |
                              >
                                return (entity.state === 'on')? 'btn-heater-on' : '';
                    - name: Heater balcony left
                      entity: input_boolean.balcony_left_heater_bool
                      element: button.heater_left
                      tap_action:
                        - action: toggle
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: icon.heater_left
                            class: |
                              >
                                return (entity.state === 'on')? 'btn-heater-on' : '';
                    - name: Heater balcony right
                      entity: input_boolean.balcony_right_heater_long_bool
                      element: button.heater_right
                      tap_action:
                        - action: toggle
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: icon.heater_right
                            class: |
                              >
                                return (entity.state === 'on')? 'btn-heater-on' : '';
                    - name: Heater balcony right tall
                      entity: input_boolean.balcony_right_heater_tall_bool
                      element: button.heater_right_tall
                      tap_action:
                        - action: toggle
                      state_action:
                        - action: call-service
                          service: floorplan.class_set
                          service_data:
                            element: icon.heater_right_tall
                            class: |
                              >
                                return (entity.state === 'on')? 'btn-heater-on' : '';

  - theme: Backend-selected
    icon: mdi:robot-vacuum
    badges: []
    panel: true
    cards:
      - type: grid
        columns: 2
        cards:
          - type: vertical-stack
            cards:
              - type: custom:xiaomi-vacuum-map-card
                map_source:
                  camera: camera.roborock_q_revo_map
                  crop:
                    top: 210
                    bottom: 210
                calibration_source:
                  camera: true
                entity: vacuum.roborock_q_revo
                vacuum_platform: default
                two_finger_pan: false
                map_locked: false
          - type: vertical-stack
            cards:
              - type: custom:more-info-card
                entity: vacuum.roborock_q_revo
                title: ' '
              - type: custom:button-card
                icon: mdi:broom
                layout: icon_name
                aspect_ratio: 8/1
                name: Прибирання кімнат
                styles:
                  icon:
                    - color: |
                        [[[
                          var hasRoom = false;
                          if (states['input_boolean.vacuum_hallway'].state === 'on') hasRoom = true;
                          if (states['input_boolean.vacuum_living_room'].state === 'on') hasRoom = true;
                          if (states['input_boolean.vacuum_kitchen'].state === 'on') hasRoom = true;
                          if (states['input_boolean.vacuum_bedroom'].state === 'on') hasRoom = true;
                          return (hasRoom)? 'rgb(68, 115, 158)' : '#AAAAAA';
                        ]]]
                tap_action:
                  action: |
                    [[[
                      var hasRoom = false;
                      if (states['input_boolean.vacuum_hallway'].state === 'on') hasRoom = true;
                      if (states['input_boolean.vacuum_living_room'].state === 'on') hasRoom = true;
                      if (states['input_boolean.vacuum_kitchen'].state === 'on') hasRoom = true;
                      if (states['input_boolean.vacuum_bedroom'].state === 'on') hasRoom = true;
                      return (hasRoom)? 'call-service' : 'none';
                    ]]]
                  service: roborock.vacuum_clean_segment
                  service_data:
                    entity_id: vacuum.roborock_q_revo
                    segments: |
                      [[[
                        var segments = [];
                        if (states['input_boolean.vacuum_hallway'].state === 'on') segments.push(19);
                        if (states['input_boolean.vacuum_living_room'].state === 'on') segments.push(16);
                        if (states['input_boolean.vacuum_kitchen'].state === 'on') segments.push(18);
                        if (states['input_boolean.vacuum_bedroom'].state === 'on') segments.push(17);
                        return segments;
                      ]]]
              - type: custom:floorplan-card
                config:
                  image: /local/floorplan/vacuum-plan.svg
                  stylesheet: /local/floorplan/vacuum-plan.css
                  defaults:
                    hover_action: none
                    tap_action: toggle
                    double_tap_action: none
                    hold_action: none
                  rules:
                    - name: Areas
                      entities:
                        - entity: input_boolean.vacuum_hallway
                          element: hallway
                        - entity: input_boolean.vacuum_kitchen
                          element: kitchen
                        - entity: input_boolean.vacuum_living_room
                          element: living_room
                        - entity: input_boolean.vacuum_bedroom
                          element: bedroom
                      state_action:
                        service: floorplan.class_set
                        service_data:
                          class: |
                            >
                              return (entity.state === 'on')? 'vacuum-area-enabled' : 'vacuum-area-disabled';
  - theme: Backend-selected
    icon: mdi:heating-coil
    badges: []
    cards:
      - type: grid
        columns: 2
        cards:
          - type: custom:button-card
            entity: input_boolean.bathroom_heater
            name: Ванна
            label: '[[[ return states["sensor.bathroom_heater_electricalmeasurement_3"].state + " W" ]]]'
            show_label: true
            aspect_ratio: 1/1
            template:
              - cardg_bg_color
              - icon_color
              - icon_radiator
            tap_action: 
              action: toggle
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: timer.bathroom_heater
                triggers_update:
                  - input_number.bathroom_heater_timer_min
                  - input_number.bathroom_heater_timer_hour
                  - input_boolean.bathroom_heater
                template:
                  - cardg_bg_color
                  - icon_color
                  - stop_timer_tpl
                variables:
                  min: input_number.bathroom_heater_timer_min
                  hour: input_number.bathroom_heater_timer_hour
                  switch: input_boolean.bathroom_heater
                  entity: timer.bathroom_heater
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.bathroom_heater_timer_min
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.bathroom_heater_timer_min
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: хв
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.bathroom_heater_timer_min
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.bathroom_heater_timer_hour
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.bathroom_heater_timer_hour
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: год
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.bathroom_heater_timer_hour
      - type: grid
        columns: 2
        cards:
          - type: custom:button-card
            entity: input_boolean.balcony_left_heater_bool
            name: Балкон вітальня
            label: '[[[ return states["sensor.balcony_left_heater_electricalmeasurement_3"].state + " W" ]]]'
            show_label: true
            aspect_ratio: 1/1
            template:
              - cardg_bg_color
              - icon_color
              - icon_radiator
            tap_action: 
              action: toggle
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: timer.balcony_left_heater
                triggers_update:
                  - input_number.balcony_left_heater_timer_min
                  - input_number.balcony_left_heater_timer_hour
                  - input_boolean.balcony_left_heater_bool
                template:
                  - cardg_bg_color
                  - icon_color
                  - stop_timer_tpl
                variables:
                  min: input_number.balcony_left_heater_timer_min
                  hour: input_number.balcony_left_heater_timer_hour
                  switch: input_boolean.balcony_left_heater_bool
                  entity: timer.balcony_left_heater
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.balcony_left_heater_timer_min
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.balcony_left_heater_timer_min
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: хв
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.balcony_left_heater_timer_min
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.balcony_left_heater_timer_hour
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.balcony_left_heater_timer_hour
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: год
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.balcony_left_heater_timer_hour
      - type: grid
        columns: 2
        cards:
          - type: custom:button-card
            name: Балкон спальня
            entity: input_boolean.balcony_right_heater_long_bool
            label: '[[[ return states["sensor.tz3000_cehuw1lw_ts011f_electricalmeasurement"].state + " W" ]]]'
            show_label: true
            aspect_ratio: 1/1
            template:
              - cardg_bg_color
              - icon_color
              - icon_radiator
            tap_action: 
              action: toggle
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: timer.balcony_right_heater_long
                triggers_update:
                  - input_number.balcony_right_heater_long_timer_min
                  - input_number.balcony_right_heater_long_timer_hour
                  - input_boolean.balcony_right_heater_long_bool
                template:
                  - cardg_bg_color
                  - icon_color
                  - stop_timer_tpl
                variables:
                  min: input_number.balcony_right_heater_long_timer_min
                  hour: input_number.balcony_right_heater_long_timer_hour
                  switch: input_boolean.balcony_right_heater_long_bool
                  entity: timer.balcony_right_heater_long
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.balcony_right_heater_long_timer_min
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.balcony_right_heater_long_timer_min
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: хв
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.balcony_right_heater_long_timer_min
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.balcony_right_heater_long_timer_hour
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.balcony_right_heater_long_timer_hour
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: год
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.balcony_right_heater_long_timer_hour
      - type: grid
        columns: 2
        cards:
          - type: custom:button-card
            name: Балкон спальня високий
            label: '[[[ return states["sensor.tz3000_cehuw1lw_ts011f_electricalmeasurement_2"].state + " W" ]]]'
            show_label: true
            entity: input_boolean.balcony_right_heater_tall_bool
            aspect_ratio: 1/1
            template:
              - cardg_bg_color
              - icon_color
              - icon_radiator
            tap_action: 
              action: toggle
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: timer.balcony_right_heater_tall
                triggers_update:
                  - input_number.balcony_right_heater_tall_timer_min
                  - input_number.balcony_right_heater_tall_timer_hour
                  - input_boolean.balcony_right_heater_tall_bool
                template:
                  - cardg_bg_color
                  - icon_color
                  - stop_timer_tpl
                variables:
                  min: input_number.balcony_right_heater_tall_timer_min
                  hour: input_number.balcony_right_heater_tall_timer_hour
                  switch: input_boolean.balcony_right_heater_tall_bool
                  entity: timer.balcony_right_heater_tall
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.balcony_right_heater_tall_timer_min
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.balcony_right_heater_tall_timer_min
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: хв
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.balcony_right_heater_tall_timer_min
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.balcony_right_heater_tall_timer_hour
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.balcony_right_heater_tall_timer_hour
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: год
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.balcony_right_heater_tall_timer_hour
