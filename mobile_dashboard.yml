button_card_templates:
  cardg_bg_color:
    styles:
      card:
        - background-color: |
            [[[
              return (hass.themes.darkMode)? '#333333' : '#EEEEEE';
            ]]]

  icon_color:
    styles:
      icon:
        - color: rgb(68, 115, 158)

  icon_radiator:
    icon: |
      [[[ 
        return (entity.state === 'on')? 'mdi:radiator' : 'mdi:radiator-disabled';
      ]]]

  simple_light_button_tpl:
    variables:
      icon: mdi:lightbulb-off
      icon_on: mdi:lightbulb-on
      name: ' '
    icon: |
      [[[ 
        return (entity.state === 'on')? variables.icon_on : variables.icon;
      ]]]
    name: '[[[ return variables.name ]]]'
    styles:
      icon:
        - color: rgb(68, 115, 158)

  with_fan_button_tpl:
    variables:
      switch: ''
      fan_switch: ''
    tap_action:
      action: call-service
      service: |
        [[[
          return (states[variables.switch].state === 'on')? 'light.turn_off' : 'light.turn_on'
        ]]]
      service_data:
        entity_id:
          - '[[[ return variables.switch ]]]'
          - '[[[ return variables.fan_switch ]]]'
    hold_action:
      action: toggle

  light_button_tpl:
    variables:
      switch: ''
      light: ''
      icon: mdi:lightbulb
      name: ' '
    icon: '[[[ return variables.icon ]]]'
    name: '[[[ return variables.name ]]]'
    double_tap_action:
      action: more-info
      entity: '[[[ return variables.light ]]]'
    styles:
      icon:
        - opacity: |
            [[[
              if (states[variables.switch].state == 'off') return 1;
              var bri = states[variables.light].attributes.brightness / 255;
              return bri;
            ]]]
        - color: |
            [[[
              if (states[variables.switch].state == 'off') return '#000000';
              var color = states[variables.light].attributes.rgb_color;
              if (typeof color === "undefined") return '#000000';
              return "rgb(" + color[0] + ", " + color[1] + ", " + color[2] + ")";
            ]]]

  climate_button_tpl:
    variables:
      co2: ''
      humidity: ''
      temp: ''
      climate_state: ''
      climate_value: ''
    icon: ' '
    name: ' '
    styles:
      grid:
        - position: relative
      custom_fields:
        climate:
          - position: absolute
          - left: 10%
          - top: 10%
        temp:
          - position: absolute
          - right: 12px
          - top: 1%
        hum:
          - position: absolute
          - top: 31%
          - right: 12px
        co2:
          - position: absolute
          - right: 12px
          - top: 61%
          - '--text-color-sensor': |
              [[[ 
                if (states[variables.co2].state > 900) return "red"; 
                if (states[variables.co2].state > 600) return "orange"; 
                return "rgb(68, 115, 158)";
              ]]]
    tap_action:
      action: call-service
      service: input_boolean.toggle
      service_data:
        entity_id: '[[[ return variables.climate_state ]]]'
    custom_fields:
      climate: | 
        [[[
          var value = '---';
          if (states[variables.climate_state].state === 'on') value = parseInt(states[variables.climate_value].state).toString() + ' °C';
          return `<span style="color: rgb(68, 115, 158); font-size: 2em">${value}</span>`;
        ]]]
      temp: |
        [[[
          return `<span style="color: rgb(68, 115, 158);">${states[variables.temp].state} °C</span>`
        ]]]
      hum: |
        [[[
          return `<span style="color: rgb(68, 115, 158);">${states[variables.humidity].state} %</span>`
        ]]]
      co2: |
        [[[
          return `<span style="color: var(--text-color-sensor);">${parseInt(states[variables.co2].state)} CO₂</span>`
        ]]]

  air_button_tpl:
    variables:
      co2: ''
      humidity: ''
      temp: ''
    icon: '[[[ return variables.icon ]]]'
    name: ' '
    styles:
      grid:
        - grid-template-areas: '". . n . ." "temp . hum . co2"'
        - grid-template-columns: min-content 1fr min-content 1fr min-content
        - grid-template-rows: min-content min-content
      custom_fields:
        temp:
          - align-self: middle
          - justify-self: middle
        hum:
          - align-self: middle
          - justify-self: middle
        co2:
          - align-self: middle
          - justify-self: middle
          - '--text-color-sensor': |
              [[[ 
                if (states[variables.co2].state > 900) return "red"; 
                if (states[variables.co2].state > 600) return "orange"; 
                return "rgb(68, 115, 158)";
              ]]]
    custom_fields:
      temp: |
        [[[
          return `<span style="color: rgb(68, 115, 158);">${states[variables.temp].state} °C</span>`
        ]]]
      hum: |
        [[[
          return `<span style="color: rgb(68, 115, 158);">${states[variables.humidity].state} %</span>`
        ]]]
      co2: |
        [[[
          return `<span style="color: var(--text-color-sensor);">${parseInt(states[variables.co2].state)} CO₂</span>`
        ]]]
  simple_air_button_tpl:
    variables:
      humidity: ''
      temp: ''
    icon: '[[[ return variables.icon ]]]'
    name: ' '
    styles:
      grid:
        - grid-template-areas: '". n ." "temp . hum "'
        - grid-template-columns: min-content 1fr min-content
        - grid-template-rows: min-content min-content
      custom_fields:
        temp:
          - align-self: middle
          - justify-self: middle
        hum:
          - align-self: middle
          - justify-self: middle
    custom_fields:
      temp: |
        [[[
          return `<span style="color: rgb(68, 115, 158);">${states[variables.temp].state} °C</span>`
        ]]]
      hum: |
        [[[
          return `<span style="color: rgb(68, 115, 158);">${states[variables.humidity].state} %</span>`
        ]]]
  
  time_increment_tpl:
    variables:
      entity: ''
    icon: mdi:plus
    tap_action:
      action: call-service
      service: input_number.increment
      service_data:
        entity_id:
          - '[[[ return variables.entity ]]]'
  time_decrement_tpl:
    variables:
      entity: ''
    icon: mdi:minus
    tap_action:
      action: call-service
      service: input_number.decrement
      service_data:
        entity_id:
          - '[[[ return variables.entity ]]]'
  time_view_tpl:
    variables:
      unit: ''
    show_icon: false
    name: |
      [[[ 
        return String(parseInt(entity.state)).padStart(2, '0') + ' ' + variables.unit;
      ]]]
  
  stop_timer_tpl:
    variables:
      switch: ''
      min: ''
      hour: ''
      entity: ''
    aspect_ratio: 3/1
    layout: icon_name
    icon: |
      [[[ 
        if (states[variables.switch].state === 'off') return 'mdi:timer-off-outline';
        return (entity.state === 'active')? 'mdi:timer-pause-outline' : 'mdi:timer-play-outline';
      ]]]
    name: |
      [[[ 
        if (entity.state === 'idle') {
          var minutes = String(parseInt(states[variables.min].state)).padStart(2, '0'),
            hours = String(parseInt(states[variables.hour].state)).padStart(2, '0');

          return hours + ':' + minutes;
        }
        if (entity.state === 'paused') {
          var leftTime = entity.attributes.remaining.split(':');
          return leftTime[0].padStart(2, '0') + ':' + leftTime[1];
        }
        var leftSeconds = Math.floor(((new Date(entity.attributes.finishes_at)).getTime() - (new Date()).getTime()) / 1000),
          leftHours = Math.floor(leftSeconds / 3600),
          leftMinutes = Math.ceil(leftSeconds / 60) - leftHours * 60;
        
        return String(leftHours).padStart(2, '0') + ':' + String(leftMinutes).padStart(2, '0');
      ]]]
    tap_action:
      action: |
        [[[ 
          return (states[variables.switch].state === 'off')? 'none' : 'call-service';
        ]]]
      service: |
        [[[
          return (entity.state === 'idle' || entity.state === 'paused')? 'timer.start' : 'timer.pause';
        ]]]
      service_data: |
        [[[
          if (entity.state === 'idle') {
            var minutes = parseInt(states[variables.min].state),
              hours = parseInt(states[variables.hour].state),
              duration = minutes*60 + hours*3600;
            return {
              entity_id: variables.entity,
              duration: duration
            };
          }
          return {
            entity_id: variables.entity
          };
        ]]]
    double_tap_action:
      action: call-service
      service: timer.cancel
      service_data:
        entity_id:
          - '[[[ return variables.entity ]]]'

views:
  - theme: Backend-selected
    icon: mdi:view-dashboard
    badges: []
    cards:
      - type: grid
        columns: 4
        square: true
        cards:
          - type: custom:button-card
            entity: light.switch_all
            triggers_update: light.fan_all
            aspect_ratio: 1/1
            template:
              - cardg_bg_color
            styles:
              icon:
                - color: |
                    [[[ 
                      return (entity.state === 'off')? '#AAAAAA' : 'rgb(68, 115, 158)'; 
                    ]]]
            name: |
              [[[
                if (entity.state === 'on') return 'Працює';
                if (states['light.fan_all'].state === 'on') return 'Вентилятори';
                return 'Вимкнено';
              ]]]
            icon: |
              [[[
                var icon = 'power-off';
                if (entity.state === 'on') {
                  icon = 'power';
                } else {
                  if (states['light.fan_all'].state === 'on') icon = 'power-settings';
                }
                return `mdi:${icon}`;
              ]]]
            tap_action:
              action: |
                [[[
                  return (entity.state === 'on')? 'call-service' : 'none';
                ]]]
              service: light.turn_off
              service_data:
                entity_id: light.switch_all
            double_tap_action:
              action: |
                [[[
                  return (entity.state === 'on' || states['light.fan_all'].state === 'on')? 'call-service' : 'none';
                ]]]
              service: light.turn_off
              service_data:
                entity_id: light.switch_fan_all

          - type: custom:button-card
            entity: light.fan_all
            aspect_ratio: 1/1
            name: |
              [[[
                return (entity.state === 'on')? 'Працює' : 'Вимкнено'
              ]]]
            template:
              - cardg_bg_color
            styles:
              icon:
                - color: |
                    [[[ 
                      return (entity.state === 'off')? '#AAAAAA' : 'rgb(68, 115, 158)'; 
                    ]]]
            icon: |
              [[[
                var icon = (entity.state === 'on')? 'fan' : 'fan-off';
                return `mdi:${icon}`;
              ]]]
            tap_action:
              action: |
                [[[
                  return (entity.state === 'on')? 'call-service' : 'none';
                ]]]
              service: light.turn_off
              service_data:
                entity_id: light.fan_all

          - type: custom:button-card
            entity: vacuum.roborock_s6
            aspect_ratio: 1/1
            show_name: false
            template:
              - cardg_bg_color
            custom_fields:
              status: |
                [[[
                  var icon = 'dots-horizontal';
                  if (entity.state === 'paused') icon = 'pause';
                  if (entity.state === 'docked') icon = 'battery-charging';
                  if (entity.state === 'cleaning') icon = 'broom';
                  return `<ha-icon
                    icon="mdi:${icon}"
                    style="width: 24px; height: 24px; color: rgb(68, 115, 158);">
                    </ha-icon>`
                ]]]              
            styles:
              icon:
                - color: rgb(68, 115, 158)
              grid:
                - position: relative
              custom_fields:
                status:
                  - position: absolute
                  - right: 6px
                  - top: 6px
            tap_action:
              action: call-service
              service: |
                [[[
                  if (entity.state !== 'cleaning') return 'vacuum.start';
                  return 'vacuum.pause';
                ]]]
              service_data:
                entity_id: vacuum.roborock_s6
            hold_action:
              action: call-service
              service: vacuum.return_to_base
              service_data:
                entity_id: vacuum.roborock_s6
            double_tap_action:
              action: navigate
              navigation_path: /lovelace-mobile/1

          - type: custom:button-card
            aspect_ratio: 1/1
            triggers_update:
              - sensor.sm_g892a_battery_level
              - device_tracker.sm_g892a
              - switch.living_room_phone_charger
            template:
              - cardg_bg_color
            icon: mdi:cellphone-marker
            name: |
              [[[
                return states['sensor.sm_g892a_battery_level'].state + '%';
              ]]]
            custom_fields:
              status: |
                [[[
                  var icon = (states['switch.living_room_phone_charger'].state === 'off')? 'battery' : 'battery-charging';
                  var batteryLevel = Math.ceil(states['sensor.sm_g892a_battery_level'].state / 10) * 10;
                  if (batteryLevel < 100) {
                    icon += '-' + String(batteryLevel);
                  }
                  return `<ha-icon
                    icon="mdi:${icon}"
                    style="width: 24px; height: 24px; color: rgb(68, 115, 158);">
                    </ha-icon>`
                ]]]              
            styles:
              icon:
                - color: |
                    [[[ 
                      return (states['device_tracker.sm_g892a'].state !== 'home')? '#AAAAAA' : 'rgb(68, 115, 158)'; 
                    ]]]
              grid:
                - position: relative
              custom_fields:
                status:
                  - position: absolute
                  - right: 6px
                  - top: 6px
            tap_action:
              action: call-service
              service: |
                [[[
                  if (states['device_tracker.sm_g892a'].state !== 'home') return 'none';
                  return (states['switch.living_room_phone_charger'].state === 'off')? 'switch.turn_on' : 'switch.turn_off';
                ]]]
              service_data:
                entity_id: switch.living_room_phone_charger
            double_tap_action:
              action: call-service
              service: switch.turn_off
              service_data:
                entity_id: switch.living_room_phone_charger

      - type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: light.hallway_light
            template:
              - light_button_tpl
              - cardg_bg_color
            variables:
              switch: light.hallway_light
              light: light.hallway
              name: Коридор
          - type: custom:button-card
            entity: light.kitchen_light
            template:
              - light_button_tpl
              - cardg_bg_color
            variables:
              name: Кухня
              switch: light.kitchen_light
              light: light.kitchen

      - type: horizontal-stack
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                name: Туалет
                aspect_ratio: 1/1
                template:
                  - with_fan_button_tpl
                  - light_button_tpl
                  - cardg_bg_color
                entity: light.wc_light
                triggers_update: light.wc
                variables:
                  switch: light.wc_light
                  fan_switch: light.fan_wc
                  light: light.wc
              - type: custom:button-card
                entity: light.fan_wc
                aspect_ratio: 1/1
                template:
                  - simple_light_button_tpl
                  - cardg_bg_color
                variables:
                  icon: mdi:fan
                  icon_on: mdi:fan-off
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                name: Ванна
                aspect_ratio: 1/1
                template:
                  - with_fan_button_tpl
                  - light_button_tpl
                  - cardg_bg_color
                entity: light.bathroom_light_main
                triggers_update: light.bathroom
                variables:
                  switch: light.bathroom_light_main
                  fan_switch: light.fan_bathroom
                  light: light.bathroom
              - type: vertical-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 2/1
                    entity: light.fan_bathroom
                    template:
                      - simple_light_button_tpl
                      - cardg_bg_color
                    variables:
                      icon: mdi:fan
                      icon_on: mdi:fan-off
                  - type: custom:button-card
                    aspect_ratio: 2/1
                    entity: light.bathroom_light_secondary
                    template:
                      - simple_light_button_tpl
                      - cardg_bg_color
                    variables:
                      icon: mdi:lightbulb-spot
                      icon_on: mdi:lightbulb-spot-off

      - type: horizontal-stack
        cards:
          - type: custom:button-card
            entity: light.bedroom_light
            name: Спальня
            template:
              - light_button_tpl
              - cardg_bg_color
            variables:
              switch: light.bedroom_light
              light: light.bedroom
              icon: mdi:lightbulb-group
          - type: custom:button-card
            name: '&nbsp;'
            triggers_update:
              - sensor.air_bedroom_co2
              - sensor.air_bedroom_temp
              - sensor.air_bedroom_humidity
            template:
              - climate_button_tpl
              - cardg_bg_color
            variables:
              co2: sensor.air_bedroom_co2
              temp: sensor.air_bedroom_temp
              humidity: sensor.air_bedroom_humidity
              climate_state: input_boolean.climate_bedroom
              climate_value: input_number.climate_bedroom_temp

      - type: horizontal-stack
        cards:
          - type: custom:button-card
            name: Вітальня
            template:
              - light_button_tpl
              - cardg_bg_color
            entity: light.switch_living_room
            triggers_update: light.living_room
            variables:
              switch: light.switch_living_room
              light: light.living_room
              icon: mdi:lightbulb-group

          - type: custom:button-card
            name: '&nbsp;'
            triggers_update:
              - sensor.air_living_room_co2
              - sensor.air_living_room_temp
              - sensor.air_living_room_humidity
            template:
              - climate_button_tpl
              - cardg_bg_color
            variables:
              co2: sensor.air_living_room_co2
              temp: sensor.air_living_room_temp
              humidity: sensor.air_living_room_humidity
              climate_state: input_boolean.climate_living_room
              climate_value: input_number.climate_living_room_temp

      - type: horizontal-stack
        cards:
          - type: custom:button-card
            triggers_update:
              - sensor.air_balcony_co2
              - sensor.air_balcony_temp
              - sensor.air_balcony_humidity
            name: Балкон
            show_name: true
            template:
              - air_button_tpl
              - cardg_bg_color
            variables:
              co2: sensor.air_balcony_co2
              temp: sensor.air_balcony_temp
              humidity: sensor.air_balcony_humidity
          - type: custom:button-card
            triggers_update:
              - sensor.air_outdoor_temp
              - sensor.air_outdoor_humidity
            name: Вулиця
            show_name: true
            template:
              - simple_air_button_tpl
              - cardg_bg_color
            variables:
              temp: sensor.air_outdoor_temp
              humidity: sensor.air_outdoor_humidity

  - theme: Backend-selected
    icon: mdi:robot-vacuum
    badges: []
    cards:
      - type: grid
        cards:
          - show_name: true
            show_icon: true
            type: button
            tap_action:
              action: call-service
              service: xiaomi_miio.vacuum_clean_segment
              data:
                segments:
                  - 16
              target:
                entity_id: vacuum.roborock_s6
            entity: ''
            name: Коридор
            icon: mdi:broom
            hold_action:
              action: none
          - show_name: true
            show_icon: true
            type: button
            tap_action:
              action: call-service
              service: xiaomi_miio.vacuum_clean_segment
              data:
                segments:
                  - 16
                  - 18
                  - 19
              target:
                entity_id: vacuum.roborock_s6
            entity: ''
            name: Крім спальні
            icon: mdi:vacuum
            hold_action:
              action: none
          - show_name: true
            show_icon: true
            type: button
            tap_action:
              action: call-service
              service: xiaomi_miio.vacuum_clean_segment
              data:
                segments:
                  - 17
              target:
                entity_id: vacuum.roborock_s6
            entity: ''
            name: Спальня
            icon: mdi:bed-double
            hold_action:
              action: none
      - type: custom:xiaomi-vacuum-map-card
        map_source:
          camera: camera.xiaomi_cloud_map_extractor
        calibration_source:
          camera: true
        entity: vacuum.roborock_s6
        vacuum_platform: default
        two_finger_pan: false
        map_locked: true
      - type: custom:more-info-card
        entity: vacuum.roborock_s6
        title: " " 
      - type: custom:button-card
        icon: mdi:broom
        layout: icon_name
        aspect_ratio: 8/1
        name: Прибирання кімнат
        styles:
          icon:
            - color: |
                [[[
                  var hasRoom = false;
                  if (states['input_boolean.vacuum_hallway'].state === 'on') hasRoom = true;
                  if (states['input_boolean.vacuum_living_room'].state === 'on') hasRoom = true;
                  if (states['input_boolean.vacuum_kitchen'].state === 'on') hasRoom = true;
                  if (states['input_boolean.vacuum_bedroom'].state === 'on') hasRoom = true;
                  return (hasRoom)? 'rgb(68, 115, 158)' : '#AAAAAA';
                ]]]
        tap_action:
          action: |
            [[[
              var hasRoom = false;
              if (states['input_boolean.vacuum_hallway'].state === 'on') hasRoom = true;
              if (states['input_boolean.vacuum_living_room'].state === 'on') hasRoom = true;
              if (states['input_boolean.vacuum_kitchen'].state === 'on') hasRoom = true;
              if (states['input_boolean.vacuum_bedroom'].state === 'on') hasRoom = true;
              return (hasRoom)? 'call-service' : 'none';
            ]]]
          service: xiaomi_miio.vacuum_clean_segment
          service_data:
            entity_id: vacuum.roborock_s6
            segments: |
              [[[
                var segments = [];
                if (states['input_boolean.vacuum_hallway'].state === 'on') segments.push(16);
                if (states['input_boolean.vacuum_living_room'].state === 'on') segments.push(18);
                if (states['input_boolean.vacuum_kitchen'].state === 'on') segments.push(19);
                if (states['input_boolean.vacuum_bedroom'].state === 'on') segments.push(17);
                return segments;
              ]]]
      - type: 'custom:floorplan-card'
        config:
          image: /local/floorplan/vacuum-plan.svg
          stylesheet: /local/floorplan/vacuum-plan.css

          defaults:
              hover_action: none
              tap_action: toggle
              double_tap_action: none
              hold_action: none

          rules:
            - name: Areas
              entities:
                - entity: input_boolean.vacuum_hallway
                  element: hallway
                - entity: input_boolean.vacuum_kitchen
                  element: kitchen
                - entity: input_boolean.vacuum_living_room
                  element: living_room
                - entity: input_boolean.vacuum_bedroom
                  element: bedroom
              state_action:
                service: floorplan.class_set
                service_data:
                  class: |
                    >
                      return (entity.state === 'on')? 'vacuum-area-enabled' : 'vacuum-area-disabled';
  - theme: Backend-selected
    icon: mdi:heating-coil
    badges: []
    cards:
      - type: grid
        columns: 2
        cards:
          - type: custom:button-card
            entity: input_boolean.bathroom_heater
            name: Ванна
            aspect_ratio: 1/1
            template:
              - cardg_bg_color
              - icon_color
              - icon_radiator
            tap_action: 
              action: toggle
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: timer.bathroom_heater
                triggers_update:
                  - input_number.bathroom_heater_timer_min
                  - input_number.bathroom_heater_timer_hour
                  - input_boolean.bathroom_heater
                template:
                  - cardg_bg_color
                  - icon_color
                  - stop_timer_tpl
                variables:
                  min: input_number.bathroom_heater_timer_min
                  hour: input_number.bathroom_heater_timer_hour
                  switch: input_boolean.bathroom_heater
                  entity: timer.bathroom_heater
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.bathroom_heater_timer_min
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.bathroom_heater_timer_min
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: хв
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.bathroom_heater_timer_min
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.bathroom_heater_timer_hour
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.bathroom_heater_timer_hour
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: год
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.bathroom_heater_timer_hour
      - type: grid
        columns: 2
        cards:
          - type: custom:button-card
            entity: input_boolean.balcony_left_heater
            name: Балкон зліва
            aspect_ratio: 1/1
            template:
              - cardg_bg_color
              - icon_color
              - icon_radiator
            tap_action: 
              action: toggle
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: timer.balcony_left_heater
                triggers_update:
                  - input_number.balcony_left_heater_timer_min
                  - input_number.balcony_left_heater_timer_hour
                  - input_boolean.balcony_left_heater
                template:
                  - cardg_bg_color
                  - icon_color
                  - stop_timer_tpl
                variables:
                  min: input_number.balcony_left_heater_timer_min
                  hour: input_number.balcony_left_heater_timer_hour
                  switch: input_boolean.balcony_left_heater
                  entity: timer.balcony_left_heater
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.balcony_left_heater_timer_min
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.balcony_left_heater_timer_min
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: хв
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.balcony_left_heater_timer_min
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.balcony_left_heater_timer_hour
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.balcony_left_heater_timer_hour
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: год
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.balcony_left_heater_timer_hour
      - type: grid
        columns: 2
        cards:
          - type: custom:button-card
            name: Балкон справа
            entity: input_boolean.balcony_right_heater_long
            aspect_ratio: 1/1
            template:
              - cardg_bg_color
              - icon_color
              - icon_radiator
            tap_action: 
              action: toggle
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: timer.balcony_right_heater_long
                triggers_update:
                  - input_number.balcony_right_heater_long_timer_min
                  - input_number.balcony_right_heater_long_timer_hour
                  - input_boolean.balcony_right_heater_long
                template:
                  - cardg_bg_color
                  - icon_color
                  - stop_timer_tpl
                variables:
                  min: input_number.balcony_right_heater_long_timer_min
                  hour: input_number.balcony_right_heater_long_timer_hour
                  switch: input_boolean.balcony_right_heater_long
                  entity: timer.balcony_right_heater_long
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.balcony_right_heater_long_timer_min
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.balcony_right_heater_long_timer_min
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: хв
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.balcony_right_heater_long_timer_min
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.balcony_right_heater_long_timer_hour
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.balcony_right_heater_long_timer_hour
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: год
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.balcony_right_heater_long_timer_hour
      - type: grid
        columns: 2
        cards:
          - type: custom:button-card
            name: Балкон по-центру
            entity: input_boolean.balcony_right_heater_tall
            aspect_ratio: 1/1
            template:
              - cardg_bg_color
              - icon_color
              - icon_radiator
            tap_action: 
              action: toggle
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: timer.balcony_right_heater_tall
                triggers_update:
                  - input_number.balcony_right_heater_tall_timer_min
                  - input_number.balcony_right_heater_tall_timer_hour
                  - input_boolean.balcony_right_heater_tall
                template:
                  - cardg_bg_color
                  - icon_color
                  - stop_timer_tpl
                variables:
                  min: input_number.balcony_right_heater_tall_timer_min
                  hour: input_number.balcony_right_heater_tall_timer_hour
                  switch: input_boolean.balcony_right_heater_tall
                  entity: timer.balcony_right_heater_tall
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.balcony_right_heater_tall_timer_min
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.balcony_right_heater_tall_timer_min
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: хв
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.balcony_right_heater_tall_timer_min
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_decrement_tpl
                    variables:
                      entity: input_number.balcony_right_heater_tall_timer_hour
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    entity: input_number.balcony_right_heater_tall_timer_hour
                    template:
                      - cardg_bg_color
                      - time_view_tpl
                    variables:
                      unit: год
                  - type: custom:button-card
                    aspect_ratio: 1/1
                    template:
                      - cardg_bg_color
                      - icon_color
                      - time_increment_tpl
                    variables:
                      entity: input_number.balcony_right_heater_tall_timer_hour
